public class BirthdayEmailBatch2 implements Database.Batchable<sObject>,Schedulable {
    public Database.QueryLocator start(Database.BatchableContext bc) {
        // Doğum günü olan kişileri almak için gereken sorgu
        Integer todayMonth = Date.today().month();
        Integer todayDay = Date.today().day();
        
        String query = 'SELECT Id, FirstName, LastName, Email, Birthdate FROM Contact WHERE Birthdate != null';

        return Database.getQueryLocator(query);
    }

       public void execute(Database.BatchableContext bc, List<Contact> ContactList) {
        List<Messaging.SingleEmailMessage> emails = new List<Messaging.SingleEmailMessage>();

        for (Contact contact : ContactList) {
            // Doğum gününü kontrol edelim
            Integer contactMonth = contact.Birthdate.month();
            Integer contactDay = contact.Birthdate.day();
            
            if (contactMonth == Date.today().month() && contactDay == Date.today().day()) {
                String subject = 'Happy Birthdate ' + contact.FirstName + ' ' + contact.LastName + '!';
                String body = 'As Silverline family, we wish you a very happy birthday and send you best wishes for much happiness in your life!';

                Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
                email.setToAddresses(new List<String>{ contact.Email });
                email.setSubject(subject);
                email.setPlainTextBody(body);

                emails.add(email);
            }
        }

        // E-postaları toplu olarak gönder
        Messaging.sendEmail(emails);
    }

    public void finish(Database.BatchableContext bc) {
     
    }
    public void execute(SchedulableContext sc) {
        
      BirthdayEmailBatch2 batch = new BirthdayEmailBatch2();
      Database.executeBatch(batch);

        
    }
}
