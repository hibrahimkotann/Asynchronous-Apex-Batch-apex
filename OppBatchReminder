public class OppBatchReminder  implements Database.Batchable<sObject> {
    public Database.QueryLocator start(Database.BatchableContext bc) {
     
        Date reminderDate = Date.today();
        Date closeDateLimit = reminderDate.addDays(3); //  Hatırlatma tarihini ve kapanış tarihini sınırlayan bir sınırlayıcı belirle
        
         
 //String query = 'SELECT Id, Name, OwnerId, CloseDate, Owner.Email, Owner.Name FROM Opportunity WHERE StageName != \'Closed\' AND CloseDate <= :closeDateLimit AND CloseDate >= :reminderDate';
   String query = 'SELECT Id, Name, OwnerId, CloseDate, Owner.Email, Owner.Name FROM Opportunity WHERE IsClosed = false AND CloseDate <= :closeDateLimit AND CloseDate >= :reminderDate';


        return Database.getQueryLocator(query);
    }

    public void execute(Database.BatchableContext bc, List<Opportunity> oppList) {
        List<Messaging.SingleEmailMessage> emails = new List<Messaging.SingleEmailMessage>();

        for (Opportunity opp : oppList) {
            // Email içeriğini hazırla..
            String subject = opp.Name + ' Opportunity required action!';
            String body = 'Hello ' + opp.Owner.Name + ',\n\n' +
                          opp.Name + ' Opportunity has to be closed before ' + opp.CloseDate + '.\n' +
                          'Please finalize your sales process.';
                 
           
            
            // Email Mesaj oluştur.
            Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
            email.setToAddresses(new List<String>{ opp.Owner.Email });
            email.setSubject(subject);
            email.setPlainTextBody(body);
            
            emails.add(email);
        }

        // Email Gönder
        Messaging.sendEmail(emails);
    }

    public void finish(Database.BatchableContext bc) {
        
    }
}
